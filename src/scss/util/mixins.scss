@use '../util/variables.scss' as *;
@use '../util/functions.scss' as *;
@use '../util/breakpoints.scss' as *;

// ----------- Resets --------------
@mixin reset-button {
    margin: 0;
    padding: 0;
    border: none;
    background: none;
    font: inherit;
    color: inherit;
    text-align: inherit;
    text-decoration: none;
    cursor: pointer;
}

@mixin reset-list {
    padding: 0;
    margin: 0;
    list-style: none;
}

@mixin reset-link {
    color: inherit;
    text-decoration: none;
      
    &:hover {
        text-decoration: none;
    }
    
    &:visited {
        color: inherit;
    }
}
// ---------------------------------

@mixin button {
    display: block;
    border: rem(2) solid $medium-gray;
    border-radius: rem(12);
    line-height: 2.3;
    text-align: center;
}

@mixin button-hover {
    border-color: black;
    background-color: white;
    color: black;
}

@mixin buttun-paddings {
    padding-left: rem(20);
    padding-right: rem(20);
}

@mixin transition($property: 'all', $trans-dur: $trans-dur) {
    transition: #{$property} $trans-dur $trans-tf;
}

@mixin limit-max-width {
    max-width: rem($body-max-size);
    margin: 0 auto;
}

@mixin flex {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

@mixin flex-column {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

@mixin flex-row {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

@mixin edges {
    padding-left: rem($edge-indent);
    padding-right: rem($edge-indent);
    
    @include breakpoint(medium) {
        padding-left: rem($edge-indent-medium);
        padding-right: rem($edge-indent-medium);
    }
    
    @include breakpoint(large) {
        padding-left: rem($edge-indent-large);
        padding-right: rem($edge-indent-large);
    }
}

@mixin frosted-glass {
    background: rgba(53, 60, 75, 0.3);
    backdrop-filter: blur(10px);
}

// for preheaders numeration in inner pages
@mixin prepend-number($number) {
    left: em(15);
    position: relative;
    width: max-content;
    margin-left: auto;
    margin-right: auto;

    &::before {
        left: em(-30);
        position: absolute;
        content: '0#{$number}';
        font-weight: bold;
        color: $color-theme-2;
    }

    @include breakpoint(medium) {
        margin-left: 0;
        margin-right: 0;
        left: em(30);
    }
    @include breakpoint(large) {
        left: 0;
    }
}

// ----------------------------- numeration ---------------------------------
// use:
// (it will create ::before with numeration):
// @include counter(my-counter)               =>   '1', '2', etc
// @include counter(my-counter, '. ', true)   =>   '01. ', '02. ', etc

@mixin counter($name, $separator: '', $leadingZero: false) {
    
    &:before {
        counter-increment: $name;
        content:
            if($leadingZero,
                counter($name, decimal-leading-zero),
                counter($name) 
            ) + " '" + #{$separator} + "'";
    }
}

// apply to the parent with the same name
// @include counter-reset(my-counter, -1)
@mixin counter-reset($name, $start: 0) {
    counter-reset: $name $start;
}

// --------------------------------------------------------------------------
//
//
//                                 example:
// 
// .parent {
//     @include counter-reset(my-counter, -1); // start from 0;
//
//     .children {
//         @include counter(my-counter, '- ', true); =>   '01- ', '02- ', etc
//
//         // stylization for numbers
//         &:before {
//             font-weight: bold;
//             margin-right: 8em;
//         }
//     }
// }
// --------------------------------------------------------------------------