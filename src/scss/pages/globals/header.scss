@use '../../util' as *;
@use '../../globals/typography' as *;

$top-indent: 24;
$outline-size: 3; // + underline size
$outline-offset: 4;


.header {
    display: flex;
    justify-content: space-between;
    align-items: center;

    padding: rem($top-indent) rem($edge-indent);

    @include breakpoint(medium) {
        padding-bottom: 0;
    }

    &__logo-link {
        align-self: flex-start;
        user-select: none;
        @include transition(transform);

        &:hover,
        &:active {
            transform: scale(1.2);
        }

        &:focus-visible {
            border-radius: 50%;
            outline: #{rem($outline-size)} solid #{$color-font-1};
            outline-offset: rem($outline-offset);
        }
    }

    #burger-button {
        position: relative;
        @include transition(transform);

        &:hover,
        &:active {
            transform: scale(1.2);
        }
        
        // outline keeper
        &:focus-visible::before {
            $size: calc(100% + #{rem($outline-offset * 2)});

            position: absolute;
            content: '';
            width: $size;
            height: $size;
            top: rem($outline-offset * -1);
            left: rem($outline-offset * -1);

            outline: #{rem($outline-size) solid #{$color-font-1}};
        }
    }
}

.nav {
    @include breakpoint(medium) {
        margin-left: rem($edge-indent);
    }

    &__list {
        @include reset-list;
        @include text-navigation;
        @include frosted-glass;

        display: flex;
        flex-direction: column;
        
        min-height: 100vh;
        min-width: rem(170);
        width: 68vw;
        
        padding-left: rem(32);
        padding-top: rem(118);

        @include breakpoint(medium) {
            flex-direction: row;
            column-gap: rem(35);
            flex-wrap: wrap;

            min-height: auto;
            min-width: auto;
            width: auto;
    
            padding-left: rem(35);
            padding-right: rem(35);
            padding-top: 0;
            
            // shift out of parent
            margin-top: rem(-$top-indent);
            margin-right: rem(-$edge-indent);
        }
    }

    &__item {
        position: relative;
        
        @include breakpoint(medium) {
            padding: rem(36.5) 0;
        }
        
        &:not(:last-child) {
            margin-bottom: rem(32);

            @include breakpoint(medium) {
                margin-bottom: 0;
            }
        }
    }

    // --------------- numeration -----------------
    @include counter-reset(nav-links-counter, -1);

    &__link {

        @include counter(nav-links-counter, '', true);

        &:before {
            font-weight: bold;
            margin-right: em(8);
        }
    }
    // --------------------------------------------

    &__link {
        @include reset-link;
        @include transition(outline-offset);
        word-wrap: nowrap;
        user-select: none;

        &:active {
            color: $color-font-1;
        }

        &::after {
            position: absolute;
            content: '';
            bottom: -40%;
            right: 0;
            width: rem($outline-size);
            height: 180%;
            pointer-events: none;
            opacity: 0;
            
            @include transition(opacity);
            
            @include breakpoint(medium) {
                bottom: 0;
                left: 0;
                width: 100%;
                height: rem($outline-size);
            }
        }

        &:hover::after,
        &:focus-visible::after {
            opacity: 1;
            background-color: $color-font-2;
        }

        &:active::after {
            background-color: $color-font-1;
        }

        &:focus-visible {

            // outline in keyboard navigation
            outline-offset: rem($outline-offset);
            outline: #{rem($outline-size)} solid $color-font-2;

            &::after {

                // underline width will consider appeared outline in keyboard navigation
                @include breakpoint(medium) {
                    width: calc(
                        100% + #{( rem($outline-size) + rem($outline-offset) )} * 2
                    );
                    transform: translateX(
                        calc(
                            ( #{rem($outline-size)} + #{rem($outline-offset)} ) * -1
                        )
                    );
                }
            }
        }
    }
}